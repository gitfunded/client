{
  "contractName": "Token",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "supply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "updateTransfersEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "updateTransfersReturningFalse",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"updateTransfersReturningFalse\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"updateTransfersEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\\r\",\"params\":{\"owner\":\"address The address which owns the funds.\\r\",\"spender\":\"address The address which will spend the funds.\\r\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\\r\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r Beware that changing an allowance with this method brings the risk that someone may use both the old\\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\",\"params\":{\"spender\":\"The address which will spend the funds.\\r\",\"value\":\"The amount of tokens to be spent.\\r\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\\r\",\"params\":{\"owner\":\"The address to query the balance of.\\r\"},\"return\":\"An uint256 representing the amount owned by the passed address.\\r\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender.\\r approve should be called when allowed_[_spender] == 0. To decrement\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r Emits an Approval event.\\r\",\"params\":{\"spender\":\"The address which will spend the funds.\\r\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\\r\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender.\\r approve should be called when allowed_[_spender] == 0. To increment\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r Emits an Approval event.\\r\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\\r\",\"spender\":\"The address which will spend the funds.\\r\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\\r\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another.\\r Note that while this function emits an Approval event, this is not required as per the specification,\\r and other compliant implementations may not emit the event.\\r\",\"params\":{\"from\":\"address The address which you want to send tokens from\\r\",\"to\":\"address The address which you want to transfer to\\r\",\"value\":\"uint256 the amount of tokens to be transferred\\r\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/abhinavanshul/contracts/truffle-contracts/contracts/dao/tokens/Token.sol\":\"Token\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/abhinavanshul/contracts/truffle-contracts/contracts/dao/oz/ERC20.sol\":{\"keccak256\":\"0x83d94afc84930834148f8e00b2b2b624be5e2a910aeb9f508b6e3252648b304a\",\"urls\":[\"bzzr://074edfefdd7f638d059397b8b72e70605bb8eba1e750d8d512d86a5d8abaf966\",\"dweb:/ipfs/QmTPEnc9wjRf7jZ1xzh68sAjusFY5XHCTLpy79yCtCuWrA\"]},\"/C/Users/abhinavanshul/contracts/truffle-contracts/contracts/dao/oz/IERC20.sol\":{\"keccak256\":\"0xa8e3c2dc3b2585590b6dc3c59bf9fce330df300c304e2222098b561268960c35\",\"urls\":[\"bzzr://733841731bf8e48484c2937ba8787aab42dc1a1438fc8b7762a03e41501efb84\",\"dweb:/ipfs/QmbQMKZ2pa4z4dA81ihhKsnjPpuJoL8bGxSaDj2pA7ES4G\"]},\"/C/Users/abhinavanshul/contracts/truffle-contracts/contracts/dao/oz/SafeMath.sol\":{\"keccak256\":\"0xfe0dc2f1de1225da6a21ba4d59b73be39aeac91bb22c05167e60d40f7ffbd964\",\"urls\":[\"bzzr://2834924f6f10a9503080bcdc6b8cb5bc0890c5ed75760d7cb4b94a231a068610\",\"dweb:/ipfs/QmTYXNqLxE66U5Mz8koELJ5j23eNNMDRR633FyP84xnxuQ\"]},\"/C/Users/abhinavanshul/contracts/truffle-contracts/contracts/dao/tokens/Token.sol\":{\"keccak256\":\"0x638fbdd82646940a426b324c00733959a03492957fc734cc6556626d3d520f96\",\"urls\":[\"bzzr://89de5853571616e3b642c3e6b412cef7094a1dda61c72ee4126dbbb3a593c5c2\",\"dweb:/ipfs/QmUoyxdsv3eYvpKKCqtK9eWQDD3bqT5wcWtJ8oxeLLsP6c\"]}},\"version\":1}",
  "bytecode": "0x60806040526003805461ff001960ff1990911660011716905534801561002457600080fd5b506040516106dd3803806106dd8339818101604052602081101561004757600080fd5b505161005c33826001600160e01b0361006216565b5061012d565b6001600160a01b03821661007557600080fd5b61008e8160025461011460201b61054d1790919060201c565b6002556001600160a01b038216600090815260208181526040909120546100be91839061054d610114821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561012657600080fd5b9392505050565b6105a18061013c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a457c2d711610066578063a457c2d714610185578063a9059cbb146101b1578063b43c36ec146101dd578063d34a2161146101fe578063dd62ed3e1461021d5761009e565b8063095ea7b3146100a357806318160ddd146100e357806323b872dd146100fd578063395093511461013357806370a082311461015f575b600080fd5b6100cf600480360360408110156100b957600080fd5b506001600160a01b03813516906020013561024b565b604080519115158252519081900360200190f35b6100eb610262565b60408051918252519081900360200190f35b6100cf6004803603606081101561011357600080fd5b506001600160a01b03813581169160208101359091169060400135610268565b6100cf6004803603604081101561014957600080fd5b506001600160a01b0381351690602001356102bf565b6100eb6004803603602081101561017557600080fd5b50356001600160a01b03166102fb565b6100cf6004803603604081101561019b57600080fd5b506001600160a01b038135169060200135610316565b6100cf600480360360408110156101c757600080fd5b506001600160a01b038135169060200135610352565b6101fc600480360360208110156101f357600080fd5b5035151561038d565b005b6101fc6004803603602081101561021457600080fd5b503515156103a7565b6100eb6004803603604081101561023357600080fd5b506001600160a01b03813581169160200135166103ba565b60006102583384846103e5565b5060015b92915050565b60025490565b600061027584848461046d565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546102b59186916102b0908663ffffffff61053816565b6103e5565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102589185906102b0908663ffffffff61054d16565b6001600160a01b031660009081526020819052604090205490565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102589185906102b0908663ffffffff61053816565b600354600090610100900460ff161561036d5750600061025c565b60035460ff1661037c57600080fd5b610386838361055f565b9392505050565b600380549115156101000261ff0019909216919091179055565b6003805460ff1916911515919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166103f857600080fd5b6001600160a01b03831661040b57600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661048057600080fd5b6001600160a01b0383166000908152602081905260409020546104a9908263ffffffff61053816565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546104de908263ffffffff61054d16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561054757600080fd5b50900390565b60008282018381101561038657600080fd5b600061025833848461046d56fea265627a7a723058209d11020aec77b6ad378aeda4e612077e5657dfe7c46059ff69d41b339a7b468b64736f6c63430005090032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a457c2d711610066578063a457c2d714610185578063a9059cbb146101b1578063b43c36ec146101dd578063d34a2161146101fe578063dd62ed3e1461021d5761009e565b8063095ea7b3146100a357806318160ddd146100e357806323b872dd146100fd578063395093511461013357806370a082311461015f575b600080fd5b6100cf600480360360408110156100b957600080fd5b506001600160a01b03813516906020013561024b565b604080519115158252519081900360200190f35b6100eb610262565b60408051918252519081900360200190f35b6100cf6004803603606081101561011357600080fd5b506001600160a01b03813581169160208101359091169060400135610268565b6100cf6004803603604081101561014957600080fd5b506001600160a01b0381351690602001356102bf565b6100eb6004803603602081101561017557600080fd5b50356001600160a01b03166102fb565b6100cf6004803603604081101561019b57600080fd5b506001600160a01b038135169060200135610316565b6100cf600480360360408110156101c757600080fd5b506001600160a01b038135169060200135610352565b6101fc600480360360208110156101f357600080fd5b5035151561038d565b005b6101fc6004803603602081101561021457600080fd5b503515156103a7565b6100eb6004803603604081101561023357600080fd5b506001600160a01b03813581169160200135166103ba565b60006102583384846103e5565b5060015b92915050565b60025490565b600061027584848461046d565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546102b59186916102b0908663ffffffff61053816565b6103e5565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102589185906102b0908663ffffffff61054d16565b6001600160a01b031660009081526020819052604090205490565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102589185906102b0908663ffffffff61053816565b600354600090610100900460ff161561036d5750600061025c565b60035460ff1661037c57600080fd5b610386838361055f565b9392505050565b600380549115156101000261ff0019909216919091179055565b6003805460ff1916911515919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166103f857600080fd5b6001600160a01b03831661040b57600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661048057600080fd5b6001600160a01b0383166000908152602081905260409020546104a9908263ffffffff61053816565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546104de908263ffffffff61054d16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561054757600080fd5b50900390565b60008282018381101561038657600080fd5b600061025833848461046d56fea265627a7a723058209d11020aec77b6ad378aeda4e612077e5657dfe7c46059ff69d41b339a7b468b64736f6c63430005090032",
  "sourceMap": "65:663:25:-;;;96:28;;;-1:-1:-1;;;;96:28:25;;;120:4;96:28;131:36;;;176:79;5:2:-1;;;;30:1;27;20:12;5:2;176:79:25;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;176:79:25;222:25;228:10;176:79;-1:-1:-1;;;;;222:5:25;:25;:::i;:::-;176:79;65:663;;5948:269:19;-1:-1:-1;;;;;6023:21:19;;6015:30;;;;;;6073:23;6090:5;6073:12;;:16;;;;;;:23;;;;:::i;:::-;6058:12;:38;-1:-1:-1;;;;;6128:18:19;;:9;:18;;;;;;;;;;;;:29;;6151:5;;6128:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;6107:18:19;;:9;:18;;;;;;;;;;;:50;;;;6173:36;;;;;;;6107:18;;:9;;6173:36;;;;;;;;;;5948:269;;:::o;589:150:22:-;647:7;679:5;;;703:6;;;;695:15;;;;;;730:1;589:150;-1:-1:-1;;;589:150:22:o;65:663:25:-;;;;;;;",
  "deployedSourceMap": "65:663:25:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65:663:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2807:148:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2807:148:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;958:91;;;:::i;:::-;;;;;;;;;;;;;;;;3428:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3428:228:19;;;;;;;;;;;;;;;;;:::i;4171:203::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4171:203:19;;;;;;;;:::i;1269:106::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1269:106:19;-1:-1:-1;;;;;1269:106:19;;:::i;4894:213::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4894:213:19;;;;;;;;:::i;493:232:25:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;493:232:25;;;;;;;;:::i;371:114::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;371:114:25;;;;:::i;:::-;;263:100;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;263:100:25;;;;:::i;1714:131:19:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1714:131:19;;;;;;;;;;:::i;2807:148::-;2872:4;2889:36;2898:10;2910:7;2919:5;2889:8;:36::i;:::-;-1:-1:-1;2943:4:19;2807:148;;;;;:::o;958:91::-;1029:12;;958:91;:::o;3428:228::-;3507:4;3524:26;3534:4;3540:2;3544:5;3524:9;:26::i;:::-;-1:-1:-1;;;;;3588:14:19;;;;;;:8;:14;;;;;;;;3576:10;3588:26;;;;;;;;;3561:65;;3570:4;;3588:37;;3619:5;3588:37;:30;:37;:::i;:::-;3561:8;:65::i;:::-;-1:-1:-1;3644:4:19;3428:228;;;;;:::o;4171:203::-;4277:10;4251:4;4298:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4298:29:19;;;;;;;;;;4251:4;;4268:76;;4289:7;;4298:45;;4332:10;4298:45;:33;:45;:::i;1269:106::-;-1:-1:-1;;;;;1351:16:19;1324:7;1351:16;;;;;;;;;;;;1269:106::o;4894:213::-;5005:10;4979:4;5026:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5026:29:19;;;;;;;;;;4979:4;;4996:81;;5017:7;;5026:50;;5060:15;5026:50;:33;:50;:::i;493:232:25:-;575:23;;554:4;;575:23;;;;;571:68;;;-1:-1:-1;622:5:25;615:12;;571:68;657:16;;;;649:25;;;;;;692;707:2;711:5;692:14;:25::i;:::-;685:32;493:232;-1:-1:-1;;;493:232:25:o;371:114::-;444:23;:33;;;;;;;-1:-1:-1;;444:33:25;;;;;;;;;371:114::o;263:100::-;329:16;:26;;-1:-1:-1;;329:26:25;;;;;;;;;;263:100::o;1714:131:19:-;-1:-1:-1;;;;;1813:15:19;;;1786:7;1813:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1714:131::o;6993:254::-;-1:-1:-1;;;;;7086:21:19;;7078:30;;;;;;-1:-1:-1;;;;;7127:19:19;;7119:28;;;;;;-1:-1:-1;;;;;7160:15:19;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7208:31;;;;;;;;;;;;;;;;;6993:254;;;:::o;5334:262::-;-1:-1:-1;;;;;5422:16:19;;5414:25;;;;;;-1:-1:-1;;;;;5470:15:19;;:9;:15;;;;;;;;;;;:26;;5490:5;5470:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5452:15:19;;;:9;:15;;;;;;;;;;;:44;;;;5523:13;;;;;;;:24;;5541:5;5523:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5507:13:19;;;:9;:13;;;;;;;;;;;;:40;;;;5563:25;;;;;;;5507:13;;5563:25;;;;;;;;;;;;;5334:262;;;:::o;431:150:22:-;489:7;522:1;517;:6;;509:15;;;;;;-1:-1:-1;547:5:22;;;431:150::o;589:::-;647:7;679:5;;;703:6;;;;695:15;;;;;2020:140:19;2081:4;2098:32;2108:10;2120:2;2124:5;2098:9;:32::i",
  "source": "pragma solidity >=0.5.0 < 0.6.0;\r\n\r\nimport \"../oz/ERC20.sol\";\r\n\r\ncontract Token is ERC20 {\r\n    bool transfersEnabled = true;\r\n    bool transfersReturningFalse = false;\r\n\r\n    constructor(uint256 supply) public {\r\n        _mint(msg.sender, supply);\r\n    }\r\n\r\n    function updateTransfersEnabled(bool enabled) external {\r\n        transfersEnabled = enabled;\r\n    }\r\n\r\n    function updateTransfersReturningFalse(bool enabled) external {\r\n        transfersReturningFalse = enabled;\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        if (transfersReturningFalse) {\r\n            return false;\r\n        }\r\n        require(transfersEnabled);\r\n        return super.transfer(to, value);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\abhinavanshul\\contracts\\truffle-contracts\\contracts\\dao\\tokens\\Token.sol",
  "ast": {
    "absolutePath": "/C/Users/abhinavanshul/contracts/truffle-contracts/contracts/dao/tokens/Token.sol",
    "exportedSymbols": {
      "Token": [
        10396
      ]
    },
    "id": 10397,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10329,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:25"
      },
      {
        "absolutePath": "/C/Users/abhinavanshul/contracts/truffle-contracts/contracts/dao/oz/ERC20.sol",
        "file": "../oz/ERC20.sol",
        "id": 10330,
        "nodeType": "ImportDirective",
        "scope": 10397,
        "sourceUnit": 9651,
        "src": "36:25:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10331,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9650,
              "src": "83:5:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$9650",
                "typeString": "contract ERC20"
              }
            },
            "id": 10332,
            "nodeType": "InheritanceSpecifier",
            "src": "83:5:25"
          }
        ],
        "contractDependencies": [
          9650,
          9719
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10396,
        "linearizedBaseContracts": [
          10396,
          9650,
          9719
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10335,
            "name": "transfersEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 10396,
            "src": "96:28:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10333,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "96:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 10334,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "120:4:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10338,
            "name": "transfersReturningFalse",
            "nodeType": "VariableDeclaration",
            "scope": 10396,
            "src": "131:36:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10336,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "131:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 10337,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "162:5:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10349,
              "nodeType": "Block",
              "src": "211:44:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10344,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10411,
                          "src": "228:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "228:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10346,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10340,
                        "src": "240:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10343,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9539,
                      "src": "222:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "222:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10348,
                  "nodeType": "ExpressionStatement",
                  "src": "222:25:25"
                }
              ]
            },
            "documentation": null,
            "id": 10350,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10340,
                  "name": "supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 10350,
                  "src": "188:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "187:16:25"
            },
            "returnParameters": {
              "id": 10342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:0:25"
            },
            "scope": 10396,
            "src": "176:79:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10359,
              "nodeType": "Block",
              "src": "318:45:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10355,
                      "name": "transfersEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10335,
                      "src": "329:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10356,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10352,
                      "src": "348:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "329:26:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10358,
                  "nodeType": "ExpressionStatement",
                  "src": "329:26:25"
                }
              ]
            },
            "documentation": null,
            "id": 10360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10352,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 10360,
                  "src": "295:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10351,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "294:14:25"
            },
            "returnParameters": {
              "id": 10354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:0:25"
            },
            "scope": 10396,
            "src": "263:100:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10369,
              "nodeType": "Block",
              "src": "433:52:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10365,
                      "name": "transfersReturningFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10338,
                      "src": "444:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10366,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10362,
                      "src": "470:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "444:33:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10368,
                  "nodeType": "ExpressionStatement",
                  "src": "444:33:25"
                }
              ]
            },
            "documentation": null,
            "id": 10370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersReturningFalse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10362,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 10370,
                  "src": "410:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10361,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:14:25"
            },
            "returnParameters": {
              "id": 10364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:0:25"
            },
            "scope": 10396,
            "src": "371:114:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10394,
              "nodeType": "Block",
              "src": "560:165:25",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 10379,
                    "name": "transfersReturningFalse",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10338,
                    "src": "575:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10383,
                  "nodeType": "IfStatement",
                  "src": "571:68:25",
                  "trueBody": {
                    "id": 10382,
                    "nodeType": "Block",
                    "src": "600:39:25",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 10380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "622:5:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 10378,
                        "id": 10381,
                        "nodeType": "Return",
                        "src": "615:12:25"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10385,
                        "name": "transfersEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10335,
                        "src": "657:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10414,
                        10415
                      ],
                      "referencedDeclaration": 10414,
                      "src": "649:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "649:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10387,
                  "nodeType": "ExpressionStatement",
                  "src": "649:25:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10390,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10372,
                        "src": "707:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10391,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10374,
                        "src": "711:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10388,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10494,
                        "src": "692:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Token_$10396",
                          "typeString": "contract super Token"
                        }
                      },
                      "id": 10389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9343,
                      "src": "692:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 10392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10378,
                  "id": 10393,
                  "nodeType": "Return",
                  "src": "685:32:25"
                }
              ]
            },
            "documentation": null,
            "id": 10395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10372,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 10395,
                  "src": "511:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10374,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10395,
                  "src": "523:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "510:27:25"
            },
            "returnParameters": {
              "id": 10378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10377,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10395,
                  "src": "554:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10376,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:6:25"
            },
            "scope": 10396,
            "src": "493:232:25",
            "stateMutability": "nonpayable",
            "superFunction": 9343,
            "visibility": "public"
          }
        ],
        "scope": 10397,
        "src": "65:663:25"
      }
    ],
    "src": "0:730:25"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/abhinavanshul/contracts/truffle-contracts/contracts/dao/tokens/Token.sol",
    "exportedSymbols": {
      "Token": [
        10396
      ]
    },
    "id": 10397,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10329,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:25"
      },
      {
        "absolutePath": "/C/Users/abhinavanshul/contracts/truffle-contracts/contracts/dao/oz/ERC20.sol",
        "file": "../oz/ERC20.sol",
        "id": 10330,
        "nodeType": "ImportDirective",
        "scope": 10397,
        "sourceUnit": 9651,
        "src": "36:25:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10331,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9650,
              "src": "83:5:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$9650",
                "typeString": "contract ERC20"
              }
            },
            "id": 10332,
            "nodeType": "InheritanceSpecifier",
            "src": "83:5:25"
          }
        ],
        "contractDependencies": [
          9650,
          9719
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10396,
        "linearizedBaseContracts": [
          10396,
          9650,
          9719
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10335,
            "name": "transfersEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 10396,
            "src": "96:28:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10333,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "96:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 10334,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "120:4:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10338,
            "name": "transfersReturningFalse",
            "nodeType": "VariableDeclaration",
            "scope": 10396,
            "src": "131:36:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10336,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "131:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 10337,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "162:5:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10349,
              "nodeType": "Block",
              "src": "211:44:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10344,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10411,
                          "src": "228:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "228:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10346,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10340,
                        "src": "240:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10343,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9539,
                      "src": "222:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "222:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10348,
                  "nodeType": "ExpressionStatement",
                  "src": "222:25:25"
                }
              ]
            },
            "documentation": null,
            "id": 10350,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10340,
                  "name": "supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 10350,
                  "src": "188:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "187:16:25"
            },
            "returnParameters": {
              "id": 10342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:0:25"
            },
            "scope": 10396,
            "src": "176:79:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10359,
              "nodeType": "Block",
              "src": "318:45:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10355,
                      "name": "transfersEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10335,
                      "src": "329:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10356,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10352,
                      "src": "348:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "329:26:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10358,
                  "nodeType": "ExpressionStatement",
                  "src": "329:26:25"
                }
              ]
            },
            "documentation": null,
            "id": 10360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10352,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 10360,
                  "src": "295:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10351,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "294:14:25"
            },
            "returnParameters": {
              "id": 10354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:0:25"
            },
            "scope": 10396,
            "src": "263:100:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10369,
              "nodeType": "Block",
              "src": "433:52:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10365,
                      "name": "transfersReturningFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10338,
                      "src": "444:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10366,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10362,
                      "src": "470:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "444:33:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10368,
                  "nodeType": "ExpressionStatement",
                  "src": "444:33:25"
                }
              ]
            },
            "documentation": null,
            "id": 10370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersReturningFalse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10362,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 10370,
                  "src": "410:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10361,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:14:25"
            },
            "returnParameters": {
              "id": 10364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:0:25"
            },
            "scope": 10396,
            "src": "371:114:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10394,
              "nodeType": "Block",
              "src": "560:165:25",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 10379,
                    "name": "transfersReturningFalse",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10338,
                    "src": "575:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10383,
                  "nodeType": "IfStatement",
                  "src": "571:68:25",
                  "trueBody": {
                    "id": 10382,
                    "nodeType": "Block",
                    "src": "600:39:25",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 10380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "622:5:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 10378,
                        "id": 10381,
                        "nodeType": "Return",
                        "src": "615:12:25"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10385,
                        "name": "transfersEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10335,
                        "src": "657:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10414,
                        10415
                      ],
                      "referencedDeclaration": 10414,
                      "src": "649:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "649:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10387,
                  "nodeType": "ExpressionStatement",
                  "src": "649:25:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10390,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10372,
                        "src": "707:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10391,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10374,
                        "src": "711:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10388,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10494,
                        "src": "692:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Token_$10396",
                          "typeString": "contract super Token"
                        }
                      },
                      "id": 10389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9343,
                      "src": "692:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 10392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10378,
                  "id": 10393,
                  "nodeType": "Return",
                  "src": "685:32:25"
                }
              ]
            },
            "documentation": null,
            "id": 10395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10372,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 10395,
                  "src": "511:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10374,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10395,
                  "src": "523:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "510:27:25"
            },
            "returnParameters": {
              "id": 10378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10377,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10395,
                  "src": "554:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10376,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:6:25"
            },
            "scope": 10396,
            "src": "493:232:25",
            "stateMutability": "nonpayable",
            "superFunction": 9343,
            "visibility": "public"
          }
        ],
        "scope": 10397,
        "src": "65:663:25"
      }
    ],
    "src": "0:730:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.9+commit.e560f70d.Emscripten.clang"
  },
  "networks": {
    "10": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xeD1D3391FAfd8dB75864a40074E2E690F48CE7db",
      "transactionHash": "0x0efe35f06f94f71e8e13ff9145ee3062ab7c55b7726c7acaf81aaa90bc09d3d0"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-06-02T13:56:31.215Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.\r",
        "params": {
          "owner": "address The address which owns the funds.\r",
          "spender": "address The address which will spend the funds.\r"
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender.\r"
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r Beware that changing an allowance with this method brings the risk that someone may use both the old\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "value": "The amount of tokens to be spent.\r"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.\r",
        "params": {
          "owner": "The address to query the balance of.\r"
        },
        "return": "An uint256 representing the amount owned by the passed address.\r"
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[_spender] == 0. To decrement\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r Emits an Approval event.\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "subtractedValue": "The amount of tokens to decrease the allowance by.\r"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[_spender] == 0. To increment\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r Emits an Approval event.\r",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.\r",
          "spender": "The address which will spend the funds.\r"
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence\r"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another.\r Note that while this function emits an Approval event, this is not required as per the specification,\r and other compliant implementations may not emit the event.\r",
        "params": {
          "from": "address The address which you want to send tokens from\r",
          "to": "address The address which you want to transfer to\r",
          "value": "uint256 the amount of tokens to be transferred\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}